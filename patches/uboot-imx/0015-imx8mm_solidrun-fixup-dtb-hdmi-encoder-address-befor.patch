From 0bdc2867ddabfe674271a246a2bd6d853c5b5672 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Tue, 7 Jun 2022 10:17:28 +0300
Subject: [PATCH 15/17] imx8mm_solidrun: fixup dtb hdmi encoder address before
 booting an OS

Encoder address depends on optional R185. Probe the i2c bus for both
known addresses, and patch DTB accordingly.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 .../imx8mm_solidrun/imx8mm_solidrun.c         | 113 ++++++++++++++++--
 configs/imx8mm_solidrun_defconfig             |   2 +
 2 files changed, 108 insertions(+), 7 deletions(-)

diff --git a/board/solidrun/imx8mm_solidrun/imx8mm_solidrun.c b/board/solidrun/imx8mm_solidrun/imx8mm_solidrun.c
index d41324ecd5..1c460aaadd 100644
--- a/board/solidrun/imx8mm_solidrun/imx8mm_solidrun.c
+++ b/board/solidrun/imx8mm_solidrun/imx8mm_solidrun.c
@@ -36,6 +36,8 @@ DECLARE_GLOBAL_DATA_PTR;
 #define UART_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_FSEL1)
 #define WDOG_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_ODE | PAD_CTL_PUE | PAD_CTL_PE)
 
+static uint8_t find_hdmi_encoder();
+
 static iomux_v3_cfg_t const uart_pads[] = {
 	IMX8MM_PAD_UART2_RXD_UART2_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
 	IMX8MM_PAD_UART2_TXD_UART2_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
@@ -163,13 +165,6 @@ int dram_init(void)
 	return 0;
 }
 
-#ifdef CONFIG_OF_BOARD_SETUP
-int ft_board_setup(void *blob, bd_t *bd)
-{
-	return 0;
-}
-#endif
-
 #define SPR2803_RST_PAD IMX_GPIO_NR(1, 15)
 static iomux_v3_cfg_t const spr2803_rst_pad[] = {
 	IMX8MM_PAD_GPIO1_IO15_GPIO1_IO15 |
@@ -409,6 +404,7 @@ static void adv7535_init(void)
 		return;
 	}
 
+
 	ret = dm_i2c_probe(bus, ADV7535_MAIN, 0, &main_dev);
 	if (ret) {
 		printf("%s: Can't find device id=0x%x, on bus %d\n",
@@ -803,3 +799,106 @@ int board_get_mac(int dev_id, unsigned char *mac) {
 
 	return -ENOENT;
 }
+
+/* probe i2c bus for hdmi encoder at given address */
+static bool find_hdmi_encoder_at(struct udevice *bus, uint8_t addr) {
+	struct udevice *dev = NULL;
+	uint16_t chipid;
+	int ret;
+
+	ret = dm_i2c_probe(bus, addr, 0, &dev);
+	if (ret) {
+		pr_debug("%s: failed to probe probe i2c address %u: %i\n", __func__, addr, ret);
+		return false;
+	}
+
+	/* chip-id at 0xf5-0xf6 */
+	ret = dm_i2c_read(dev, 0xf5, &chipid, 2);
+	if (ret) {
+		pr_err("%s: failed to read ID register: %i\n", __func__, ret);
+		return false;
+	}
+
+	switch (chipid) {
+	case 0x8989:
+		return true;
+	default:
+		pr_err("%s: unknown chipid: 0x%x\n", __func__, chipid);
+		return false;
+	}
+}
+
+/* probe i2c bus for hdmi encoder */
+static uint8_t find_hdmi_encoder() {
+	struct udevice *bus = NULL;
+	struct udevice *i2c_dev = NULL;
+
+	/* get i2c3 */
+	if (uclass_get_device_by_seq(UCLASS_I2C, 2, &bus)) {
+		pr_err("%s: failed to get i2c%i!\n", __func__, 3);
+		return 0;
+	}
+
+	/* test known addresses */
+	if (find_hdmi_encoder_at(bus, 0x39))
+		return 0x39;
+	else if (find_hdmi_encoder_at(bus, 0x3d))
+		return 0x3d;
+	else
+		return 0;
+}
+
+#ifdef CONFIG_OF_BOARD_SETUP
+/*
+ * Patch device-tree for OS:
+ * - HDMI encoder (i2c address depending on optional R185)
+ */
+int ft_board_setup(void *fdt, bd_t *bd) {
+	uint8_t addr_encoder, addr_encoder_cec, addr_encoder_edid, addr_encoder_pkt;
+	int node_encoder[2];
+	int ret = -1;
+
+	/* search encoder at known addresses */
+	addr_encoder = find_hdmi_encoder();
+	if (!addr_encoder) {
+		pr_err("%s: couldn't detect hdmi encoder, not patching dtb!\n", __func__);
+		return 0;
+	}
+	printf("%s: Found HDMI encoder at 0x%x!\n", __func__, addr_encoder);
+
+	switch (addr_encoder) {
+	case 0x39:
+		addr_encoder_cec = 0x38;
+		addr_encoder_edid = 0x3b;
+		addr_encoder_pkt = 0x34;
+		break;
+	case 0x3d:
+		addr_encoder_cec = 0x3c;
+		addr_encoder_edid = 0x3f;
+		addr_encoder_pkt = 0x38;
+		break;
+	default:
+		pr_err("%s: unknown hdmi encoder address 0x%x!\n", __func__);
+		return 0;
+	}
+
+	/* patch known fdt nodes with probed address */
+	node_encoder[0] = fdt_path_offset(fdt, "/i2c@30a40000/adv7535@39");
+	node_encoder[1] = fdt_path_offset(fdt, "/i2c@30a40000/adv7535@3d");
+
+	for (uint8_t i = 0; i < 2; i++) {
+		if(node_encoder[i] < 0)
+			continue;
+
+		ret = fdt_setprop_u32(fdt, node_encoder[i], "reg", addr_encoder);
+		fdt_setprop_u32(fdt, node_encoder[i], "adi,addr-cec", addr_encoder_cec);
+		fdt_setprop_u32(fdt, node_encoder[i], "adi,addr-edid", addr_encoder_edid);
+		fdt_setprop_u32(fdt, node_encoder[i], "adi,addr-pkt", addr_encoder_pkt);
+	}
+
+	if(ret < 0)
+		pr_err("%s: failed to patch hdmi encoder address in dtb!\n", __func__);
+
+	return 0;
+}
+#endif
diff --git a/configs/imx8mm_solidrun_defconfig b/configs/imx8mm_solidrun_defconfig
index e8f4c44341..13f1448305 100644
--- a/configs/imx8mm_solidrun_defconfig
+++ b/configs/imx8mm_solidrun_defconfig
@@ -94,3 +94,5 @@ CONFIG_IMX_SEC_MIPI_DSI=y
 CONFIG_MISC=y
 CONFIG_I2C_EEPROM=y
 CONFIG_CMD_TLV_EEPROM=y
+
+CONFIG_OF_BOARD_SETUP=y
-- 
2.35.3

